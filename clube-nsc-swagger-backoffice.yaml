openapi: 3.0.0
info:
  description: >-
    Mapeamento dos endpoints utilizados pelo backoffice do Clube NSC.
  version: 1.0.0-oas3
  title: BACKOFFICE - Clube NSC API Docs
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: kleyson.sousa@somosnsc.com.br
  license:
    name: Licença de uso Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: access
    description: validação de acesso
  - name: business
    description: Parceiros
  - name: benefit
    description: Benefícios dos parceiros do Clube
  - name: voucher
    description: Consumo e utilização de vouchers
  - name: branch
    description: Locais físicos ou online onde se pode utilizar um voucher
  - name: category
    description: Consumo de categorias
  - name: user-vip
    description: Verifica sócio beneficiado
  - name: banner
    description: Banners dos benfícios (ex, na home do site do Clube)
  - name: content
    description: Conteúdo de texto de alguns elementos do site do Clube
  - name: faq
    description: Perguntas e respostas sobre o Clube do Assinante
paths:

  /access/v1/verify:
      post:
        tags:
          - access
        summary: Consulta de permissẽs de acesso
        description: 'Buscar as permissões de acesso desta sessão'
        operationId: accessVerify
        responses:
          '200':
            description: Successful Operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Access'
          '400':
            description: Invalid Operation
        requestBody:
          $ref: '#/components/requestBodies/Access'
    
  /business/v1/find:
    post:
      tags:
        - business
      summary: Busca por benefícios
      description: 'Buscar benefícios podendo utilizar vários filtros'
      operationId: findBusiness
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/Business.find'
  
  /voucher/v1/find:
    post:
      tags:
        - voucher
      summary: ''
      description: 'busca todos os vouchers'
      operationId: findVouchers
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/Voucher.find'
  /voucher/v1/getList:
    post:
      tags:
        - voucher
      description: 'Busca um voucher'
      operationId: findOneVoucher
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/Voucher.find'
  /voucher/v1/delete:
    post:
      tags:
        - voucher
      description: 'Deleta um voucher'
      operationId: removeVoucher
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.find'
        '400':
          description: Invalid Operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher.response'
        description: objeto body com ID do voucher a ser removido
        required: true
  /voucher/v1/generateVoucher:
    post:
      tags:
        - voucher
      description: 'Cria um voucher'
      operationId: generateVoucher
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher.create'
        description: objeto body com dados para criar um novo voucher
        required: true
  /voucher/v1/update:
    post:
      tags:
        - voucher
      description: 'Atualiza um voucher, por exemplo para que o usuário vote(dar nota) em um voucher'
      operationId: updateVoucher
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher.update'
        description: objeto body dados para atualizar um voucher
        required: true
  
  /branch/v1/find:
    post:
      tags:
        - branch
      summary: Busca por branches
      description: 'Buscar benefícios podendo utilizar vários filtros'
      operationId: findBranch
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/Branch.find'
  
  /benefit/v1/find:
    post:
      tags:
        - benefit
      summary: Busca por benefícios
      description: 'Buscar benefícios podendo utilizar vários filtros'
      operationId: findBenefits
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find'
  
  /category/v1/find:
    post:
      tags:
        - category
      summary: Buscar Categorias
      description: 'Busca todas as categorias cadastradas'
      operationId: getAllCategories
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category.response'
        '400':
          description: Invalid Operation
      requestBody:
          $ref: '#/components/requestBodies/Category.find'
  
  /user-vip/v1/find:
    post:
      tags:
        - user-vip
      summary: Buscar Sócio Beneficiado
      description: 'Buscar sócio beneficiado pelo nome ou e-mail'
      operationId: userVipFindOne
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserVIP.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/UserVIP.find'
  
  /banner/v1/find:
    post:
      tags:
        - banner
      summary: Buscar Banners
      description: 'Buscar os banners da home do site'
      operationId: bannerFind
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/Banner.find'
  
  /content/v1/find:
    post:
      tags:
        - content
      summary: Conteúdo do site
      description: 'Busca pelo conteúdo do site'
      operationId: contentFind
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content.response'
        '400':
          description: Invalid Operation
      requestBody:
        $ref: '#/components/requestBodies/Content.find'
  
  /faq/v1/find:
    post:
      tags:
        - faq
      description: 'Busca as perguntas/respostas do FAQ do site do Clube'
      operationId: findFaq
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faq.response'
        '400':
          description: Invalid input/id/etc (todo)
      requestBody:
        $ref: '#/components/requestBodies/Faq.find'
  
externalDocs:
  description: Documentação auxiliar (Google docs)
  url: >-
    https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE
servers:
  - url: 'https://stg-api.clubensc.com.br'
    description: Staging server
  - url: 'https://api.clubensc.com.br'
    description: Production server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  requestBodies:
  
    Access:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Access'
      description: A lista de acessos permitidos nessa sessão
      required: true
  
    Business.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Business.find'
      description: objeto body com options para a busca
      required: true
  
    Voucher.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Voucher.find'
      description: objeto body com options para a busca
      required: true
    
    Branch.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Branch.find'
      description: 'Objeto body com filtros para busca de branches'
      required: true
    
    Benefit.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Benefit.find'
      description: 'Objeto body com várias opções para filtrar a buscar pelo benefício<br/>
                    Todas as propriedades de filters são opcionais'
      required: true
    
    Category.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category.find'
      description: Objeto body com opções para buscar todas as categorias
      required: true    
    
    UserVIP.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserVIP.find'
      description: Objeto body com opções para buscar sócio beneficiado
      required: true 
    
    Banner.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Banner.find'
      description: Objeto body com opções para buscar dos banners do site
      required: true    
    
    Content.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Content.find'
      description: Objeto body com opções para buscar o conteúdo do site
      required: true 
    
    Faq.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Faq.find'
      description: 'Objeto body para filtrar e/ou ordenar a busca das perguntas e respostas (faq) do site do Clube<br/>**objeto {} no body do request é obrigatório**'
      required: true
    
  schemas:
  
    Access:
      type: object
      properties:
        list:
          type: array
          items:
            type: object
            properties:
              slug:
                type: string
                example: 'banner-view'
        
    Business.find:
      type: object
      properties:
        filters:
          type: object
          description: 'Filtros da busca'
        aggregates:
          type: array
          items:
            type: object
            properties:
              from:
                type: string
                example: 'branch'
              field:
                type: string
                example: 'branches'
              match:
                type: string
                example: '_id'
              result:
                type: string
                example: 'branchesList'
        options:
          type: object
          description: 'Filtrar tipo'
          properties:
            aggregates:
              type: array
              items:
                type: object
                properties:
                  $sort:
                    type: object
                    properties:
                      name:
                        type: integer
                        example: 1
    
    Business.response:
      type: object
      properties:
        _id:
          type: string
          description: 'Id do business'
        name:
          type: string
          description: 'Nome do estabelecimento'
        alias:
          type: string
          description: ''
        cnpj:
          type: string
          description: ''
        address:
          type: string
          description: ''
        number:
          type: string
          description: ''
        district:
          type: string
          description: ''
        complement:
          type: string
          description: ''
        city:
          type: string
          description: ''
        state:
          type: string
          description: ''
        contact:
          type: string
          description: ''
        email:
          type: string
          description: ''
        site:
          type: string
          description: ''
        zipcode:
          type: string
          description: ''
        phone:
          type: string
          description: ''
        stage:
          type: string
          description: ''
        status:
          type: boolean
          description: ''
        branches:
          type: array
          description: ''
          items:
            type: string
            example: '5ef1c58af25942a61a5737d7'
        branchesList:
          type: array
          items:
            type: object
            properties:
              from:
                type: string
                example: 'branch'
              field:
                type: string
                example: 'branches'
    
    Voucher.find:
      type: object
      properties:
        _id:
          type: string
          description: 'ID do voucher'
        userId:
          type: string
          description: 'ID do usuário que possui esse voucher'
        benefitId:
          type: string
          description: 'ID do beneficio que esse voucher pertence'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        branchId:
          type: string
          description: 'ID da unidade de uso do benefício'
        qrcode:
          type: string
          description: 'Código do voucher'
        shopValue:
          type: number
          format: float
          description: 'depreciada'
        rate:
          type: integer
          description: 'Avaliação do usuário'
        status:
          type: string
          description: >-
            Um de: 
            tovalidate: voucher criado, mas não usado, 
            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 
            used: voucher validado e avaliado pelo cliente
        createdAt:
          type: string
          description: date-time
        updatedAt:
          type: string
          description: date-time
    Voucher.create:
      type: object
      properties:
        userId:
          type: string
          description: 'ID do usuário que possui esse voucher'
        benefitId:
          type: string
          description: 'ID do beneficio que esse voucher pertence'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        branchId:
          type: string
          description: 'ID da unidade de uso do benefício'
        qrcode:
          type: string
          description: 'Código do voucher'
        shopValue:
          type: number
          format: float
          description: 'depreciada'
        rate:
          type: integer
          description: 'Avaliação do usuário'
        status:
          type: string
          description: >-
            Um de: 
            tovalidate: voucher criado, mas não usado, 
            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 
            used: voucher validado e avaliado pelo cliente
    Voucher.update:
      type: object
      properties:
        _id:
          type: string
          description: 'ID do voucher'
        userId:
          type: string
          description: 'ID do usuário que possui esse voucher'
        benefitId:
          type: string
          description: 'ID do beneficio que esse voucher pertence'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        branchId:
          type: string
          description: 'ID da unidade de uso do benefício'
        qrcode:
          type: string
          description: 'Código do voucher'
        shopValue:
          type: number
          format: float
          description: 'depreciada'
        rate:
          type: integer
          description: 'Avaliação do usuário'
        status:
          type: string
          description: >-
            Um de: 
            tovalidate: voucher criado, mas não usado, 
            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 
            used: voucher validado e avaliado pelo cliente
    Voucher.delete:
      type: object
      properties:
        _id:
          type: string
          required:
            - _id
    Voucher.response:
      type: object
      properties:
        userId:
          type: string
          description: 'ID do usuário que possui o voucher'
        benefitId:
          type: string
          description: 'ID do beneficio que esse voucher pertence'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        branchId:
          type: string
          description: 'ID da unidade de uso do benefício'
        qrcode:
          type: string
          description: 'Código do voucher'
        shopValue:
          type: number
          format: float
          description: depreciada
        rate:
          type: integer
          description: 'Avaliação do usuário'
        status:
          type: string
          description: >-
            Um de: 
            tovalidate: voucher criado, mas não usado, 
            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 
            used: voucher validado e avaliado pelo cliente
        createdAt:
          type: string
          description: date-time
        updatedAt:
          type: string
          description: date-time
    
    Branch.find:
      type: object
      properties:
        filters:
          type: object
          properties:
            name:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'nome'
                $options:
                  type: string
                  example: 'i'
            type:
              type: string
              example: 'fisico'
            stage:
              type: string
              example: 'onapproval'
            state:
              type: integer
              example: 12
            city:
              type: integer
              example: 1200401
        options:
          type: object
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 5
            sort:
              type: object
              properties:
                _id:
                  type: integer
                  example: -1
    Branch.response:
      type: object
      properties:
        _id:
          type: string
          description: 'ID da unidade (branch)'
          example: '5f76054013cd4000086a893f'
        name:
          type: string
          description: 'Nome da unidade'
          example: 'Mobly - Loja Online'
        stage:
          type: string
          description: 'Situação do cadastro dessa unidade no sistema'
          example: 'approved'
        type:
          type: string
          description: 'Tipo de unidade, fisica ou virtual'
          example: 'virtual'
        status:
          type: boolean
          description: 'Se esta unidade está ativa ou não'
        site:
          type: string
          description: 'O site associado à essa unidade (branch)'
          example: 'http://bit.ly/MoblyClubeNSC'
        
    Benefit.find:
      type: object
      properties:
        filters:
          type: object
          description: 'Filtros da busca'
          properties:
            type:
              type: string
              example: 'event'
            status:
              type: boolean
              example: true
            title:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'titulo'
                $options:
                  type: string
                  example: 'i'
            discount:
              type: object
              properties:
                $regex:
                  type: string
                  example: '99'
                $options:
                  type: string
                  example: 'i'
            shelfLifeStart:
              type: object
              properties:
                $gt:
                  type: string
                  example: '2020-01-01T21:05:00.000Z'
            shelfLifeEnd:
              type: object
              properties:
                lt:
                  type: string
                  example: '2020-10-01T21:05:00.000Z'
        options:
          type: object
          description: 'Filtrar tipo'
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 7
            sort:
              type: object
              properties:
                _id:
                  type: integer
                  example: -1
    Benefit.response:
      type: object
      required:
        - _id
        - businessId
        - type
        - flagPromotion
        - flagSpotlight
        - flagHidden
        - status
        - title
        - slug
        - description
        - resume
        - videoUrl
        - discountType
        - discount
        - shelfLifeStart
        - shelfLifeEnd
        - redemptionType
      properties:
        status:
          type: boolean
          description: 'Status do benefício (ativo ou não)'
        createdAt:
          type: string
          description: 'Data de criação do registro'
        updatedAt:
          type: string
          description: 'Última data de modificação do registro'
        _id:
          type: string
          description: 'ID do beneficio'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        type:
          type: string
          description: 'O tipo de benefício: event ou perennial'
        flagPromotion:
          type: boolean
          description: 'Sem função no sistema atual'
        flagSpotlight:
          type: boolean
          description: 'Se este benefício está marcado para aparecer na listagem de destaque'
        flagHidden:
          type: boolean
          description: 'Se este benefício está visível'
        title:
          type: string
          description: 'O título do benefício'
        slug:
          type: string
          description: 'O título do benefício que vira link: beneficio/o-que-fazer-na-cama '
        description:
          type: string
          description: 'A descrição do benefício'
        resume:
          type: string
          description: 'Resumo do benefício'
        videoUrl:
          type: string
          description: 'Não está sendo usada. A URL do video do benefício'
        discountType:
          type: string
          description: 'O tipo de desconto do benefício: percent ou plain'
        discount:
          type: string
          description: 'O valor do desconto do benefício'
        eventDescription:
          type: string
          description: 'Descrição do evento'
        siteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        tinySiteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        footerNote:
          type: string
          description: 'Nota de rodapé'
        shelfLifeStart:
          type: string
          description: 'Data de início da disponibilidade do benefício'
        shelfLifeEnd:
          type: string
          description: 'Data do fim da disponibilidade do benefício'
        redemptionType:
          type: string
          description: 'Tipo do código gerado na criação do voucher: promocode, limitedvocuher ou limitlessvoucher'
        voucherCode:
          type: string
          description: 'Código usado na geração do voucher quando redemptionType é promocode'
        preGeneratedCode:
          type: string
          description: 'Flag que define se os códigos do benefício são pré-gerados (a partir de um arquivo .csv)'
        voucherAmount:
          type: string
          description: 'Quantos vouchers vão poder ser gerados para esse benefício'
        limitVoucherByUser:
          type: string
          description: '>-
            Identifica se existe limite de vouchers gerados por usuário para
            esse benefício'
        voucherUserLimit:
          type: string
          description: >-
            Quantidade de vouchers que podem ser gerados por usuário para esse
            benefício
        voucherShelfLife:
          type: string
          description: >-
            Quantidade de dias até que o voucher expire
        benefitImage:
          type: string
          description: 'Identificador da imagem desse beneficio'
        voucherPeriodLimit:
          type: string
          description: 'Quantidades de dias necessárias para resetar o limite de vouchers por usuário (ex: um voucher a cada 10 dias)'
        events:
          type: string
          description: 'Data dos eventos'
        branches:
          description: 'Unidades relacionadas à esse benefício'
          type: array
          items:
            type: object
        categories:
          description: 'Categorias em que esse benefício pertence'
          type: array
          items:
            type: string
    
    Category.find:
      type: object
      properties:
        filters:
          type: object
          properties:
            name:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'categorianome'
                $options:
                  type: string
                  example: 'i'  
            status:
              type: boolean
              example: true    
        aggregates:
          type: array
          items:
            type: object
            properties:
              lookup:
                type: object
                properties:
                  from:
                    type: string
                    example: 'category'
                  field:
                    type: string
                    example: 'parentId'
                  match:
                    type: string
                    example: '_id'
                  result:
                    type: string
                    example: 'parentItem'
                  op:
                    type: string
                    example: '$eq'
        options:
          type: object
          description: 'Filtrar categoria'
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 5
            sort:
              type: object
              properties:
                _id:
                  type: integer
                  example: -1
    Category.response:
      type: object
      required:
        - name
        - showMenu
        - showApp
        - status
        - weight
        - weightByDate
      properties:
        status:
          type: boolean
          description: 'Categoria ativa ou não'
        createdAt:
          type: string
          description: date-time
        updatedAt:
          type: string
          description: date-time
        _id:
          type: string
        name:
          type: string
        showMenu:
          type: boolean
          description: 'Se a categoria aparece no menu do website'
        showApp:
          type: boolean
          description: 'Se a categoria aparece no menu do app'
        weight:
          type: integer
          description: 'Ordem que as categorias são organizadas, menor aparece antes'
        weightByDate:
          type: boolean
          description: 'Depreciada'
        parentId:
          type: string
          description: 'ID da categoria pai, se existir'
        parentItem:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              weight:
                type: integer
              showMenu:
                type: boolean
              showApp:
                type: boolean
              weightByDate:
                type: boolean
              status:
                type: boolean
              iconAppUrl:
                type: string
                description: 'Identificador do imagem do ícone usado no app'
              backgroundAppUrl:
                type: string
                description: 'Identificador do imagem do fundo da tela de seleção de categoria usado no app'
              iconWebsiteUrl:
                type: string
                description: 'Identificador do imagem do ícone usado no website'

    UserVIP.find:
      type: object
      properties:
        filters:
          type: object
          properties:
            name:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'nome'
                $options:
                  type: string
                  example: 'i'
            email:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'teste@teste.com'
                $options:
                  type: string
                  example: 'i'
            perfil:
              type: string
              example: 'ARBS'
        options:
          type: object
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 5
            sort:
              type: object
              properties:
                _id:
                  type: integer
                  example: -1
    UserVIP.response:
      type: object
      required:
        - _id
        - cpf
        - name
        - email
      properties:
        _id:
          type: string
        cpf:
          type: string
        name:
          type: string
        email:
          type: string
        status:
          type: string
        expiracy:
          type: string
          description: 'Data que o usuário não consegue mais utilizar o sistema. Se não possuir valor não expira'
        perfil:
          type: string
          description: 'Tipo do perfil: FUNCIONARIO, VITALICIO ou ARBS'
        createdAt:
          type: string
        updatedAt:
          type: string
    
    Banner.find:
      type: object
      properties:
        filters:
          type: object
          properties:
            benefitId:
              type: object
              properties:
                exists:
                  type: boolean
                  example: true  
        aggregates:
          type: array
          items:
            type: object
            properties:
              lookup:
                type: object
                properties:
                  from:
                    type: string
                    example: 'benefit'
                  field:
                    type: string
                    example: 'benefitId'
                  match:
                    type: string
                    example: '_id'
                  result:
                    type: string
                    example: 'benefit'
                  op:
                    type: string
                    example: '$eq'
        options:
          type: object
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 5
            sort:
              type: object
              properties:
                _id:
                  type: integer
                  example: -1
    Banner.response:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
          description: 'String representando o tipo de banner (exemplo: NO_BENEFIT)'
        weight:
          type: integer
          description: 'Ordem que os banners são mostrados, 1: maior da esquerda, 2: topo na direita, 3: embaixo na direita'
        benefitId:
          type: string
          description: 'O id do beneficio atrelado a esse banner'
        title:
          type: string
          description: 'O titulo que aparece dentro do banner'
        description:
          type: integer
          description: 'Subtitulo do banner, só é mostrado no maior banner, que fica no lado esquerdo na home'
        redirectUrl:
          type: string
          description: 'A URL que será carregada ao clicar no banner'
        imageUrl:
          type: string
          description: 'O nome da imagem que será carregada por esse banner (exemplo: f9c1464f0faf9314c0ac16bce1d9d2d0-full.jpg)'
        createdBy:
          type: string
          description: 'O ID de quem criou esse banner'
        updatedAt:
          type: string
          description: 'A data em que esse banner foi atualizado pela última vez'
        benefit:
          type: string
          description: 'Array com a list de benefícios atrelados a esse banner'
    
    Content.find:
      type: object
      properties:
        filters:
          type: object
          properties:
            name:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'nome_descritivo'
                $options:
                  type: string
                  example: 'i'
            body:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'conteudo'
                $options:
                  type: string
                  example: 'i'
            identifier:
              type: object
              properties:
                $regex:
                  type: string
                  example: 'identificador'
                $options:
                  type: string
                  example: 'i'
        options:
          type: object
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 5
            sort:
              type: object
              properties:
                _id:
                  type: integer
                  example: -1
    Content.response:
      type: object
      properties:
        _id:
          type: string
          description: 'ID desse objeto'
        body:
          type: string
          description: 'O conteúdo de fato que será mostrado para o usuário (exemplo texto de um botão ou nota de rodaé)'
        component:
          type: string
          description: 'O nome da seção do site que tem o componente que carrega o conteúdo (exemplo footer, about)'
        identifier:
          type: string
          description: 'Identificador do componente que irá carregar esse conteúdo (exemplo firstCardTitle, firstCardParagraph1)'
        name:
          type: string
          description: 'Descrição user-friendly do componente + seção associada a esse conteúdo (exemplo Primerio card parágrafo 1)'
        updatedAt:
          type: string
          description: 'Data e hora da ultima atualização dos dados'
    
    Faq.find:
      type: object
      properties:
        filters:
          type: object
          properties:
            status:
              type: boolean
        options:
          type: object
          properties:
            sort:
              type: object
              properties:
                weight:
                  type: integer
                  example: 1
    Faq.response:
      type: object
      properties:
        _id:
          type: string
          description: 'ID do objeto'
        title:
          type: string
          description: 'A pergunta do FAQ'
        description:
          type: string
          description: 'A resposta para a pergunta'
        weight:
          type: integer
          description: 'Valor numerico para ordenação de cada pergunta/resposta'
        status:
          type: boolean
          description: 'Se esta pergunta/resposta está ativa ou não'
openapi: 3.0.0
info:
  description: >-
    Documentação de API do Clube NSC
    [link](https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE)
    .`keyword` .
  version: 1.0.0-oas3
  title: (App) Clube NSC API Docs
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: kleyson.sousa@somosnsc.com.br
  license:
    name: licença de uso Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: voucher
    description: Vouchers do clube
    externalDocs:
      description: Documentação auxiliar(wip)
      url: >-
        https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE
paths:
  /voucher/v1/find:
    post:
      tags:
        - voucher
      summary: ''
      description: 'busca todos os vouchers'
      operationId: findVouchers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Voucher.find'
  /voucher/v1/find/by-status:
    post:
      tags:
        - voucher
      summary: busca vouchers baseado no status (ActiveVouchers/UsedVouchers)
      description: 'descrição TODO: como usar esse endpoint'
      operationId: findVoucherByStatus
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Voucher.find'
  /voucher/v1/find/one:
    post:
      tags:
        - voucher
      summary: busca um voucher.
      description: 'descrição TODO: como usar esse endpoint'
      operationId: findOneVoucher
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Voucher.find'
  /voucher/v1/delete:
    post:
      tags:
        - voucher
      summary: deleta um voucher.
      description: 'descrição TODO: como usar esse endpoint'
      operationId: removeVoucher
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.find'
        '400':
          description: Invalid Voucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher.response'
        description: objeto body com ID do voucher a ser removido
        required: true
  /voucher/v1/generateVoucher:
    post:
      tags:
        - voucher
      summary: cria um voucher.
      description: 'descrição TODO: como usar esse endpoint'
      operationId: generateVoucher
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Voucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher.create'
        description: objeto body com dados para criar um novo voucher
        required: true
  /voucher/v1/update:
    post:
      tags:
        - voucher
      summary: vota em um voucher.
      description: 'Atualiza um voucher, por exemplo para votar(dar nota) em um voucher'
      operationId: updateVoucher
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher.response'
        '400':
          description: Invalid Voucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Voucher.update'
        description: objeto body dados para atualizar um voucher
        required: true
  /benefit/v1/find/by-type:
    post:
      tags:
        - benefit
      summary: busca todos os vouchers.
      description: 'descrição TODO: como usar esse endpoint'
      operationId: findBenefitsByType
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find'
  /benefit/v1/find/by-near:
    post:
      tags:
        - benefit
      summary: busca todos os vouchers.
      description: 'descrição TODO: como usar esse endpoint'
      operationId: findBenefitsByNear
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find'
  /benefit/v1/find/by-term:
    post:
      tags:
        - benefit
      summary: busca vouchers por term.
      description: 'descrição TODO: como usar esse endpoint'
      operationId: findBenefitsByTerm
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find'
  /benefit/v1/find/by-id:
    post:
      tags:
        - benefit
      summary: busca vouchers por ID
      description: 'descrição TODO: como usar esse endpoint'
      operationId: findBenefitsById
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find'
  /category/v1/find/getAll:
    post:
      tags:
        - category
      summary: busca por todas as categorias dos beneficios
      description: 'descrição TODO: como usar esse endpoint'
      operationId: getAllCategories
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Invalid Voucher
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find'
  /redemption/v1/getList:
    post:
      tags:
        - redemption
      summary: Busca a lista de vouchers que foram resgatados? (redeem?)
      description: 'descrição TODO: como usar esse endpoint'
      operationId: getRedemptionList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redemption.response'
        '400':
          description: Invalid Voucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Redemption.find'
        description: objeto body com options para a consulta
        required: true
  /user-vip/v1/find/one:
    post:
      tags:
        - user-vip
      summary: Busca por um usuário VIP
      description: 'descrição TODO: como usar esse endpoint'
      operationId: userVipFindOne
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserVIP.response'
        '400':
          description: Invalid Voucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserVIP.find'
        description: objeto body com options para a consulta
        required: true
  /document/v1/upload/avatar:
    post:
      tags:
        - upload
        - avatar
      summary: Envia uma imagem para ser usada como avatar do usuário
      description: 'descrição TODO: como usar esse endpoint'
      operationId: documentUploadAvatar
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document.upload.response'
        '400':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document.upload.avatar'
        description: objeto body com options para a consulta
        required: true
  /rating/v1/create:
    post:
      tags:
        - rating
      summary: Salva avaliação do app pelo usuário
      description: 'descrição TODO: como usar esse endpoint'
      operationId: rateApp
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document.upload.response'
        '400':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document.upload.response'
        description: objeto body com options para a consulta
        required: true
externalDocs:
  description: Documentação auxiliar (Google docs)
  url: >-
    https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE
servers:
  - url: 'https://stg-api.clubensc.com.br'
    description: Staging server
  - url: 'https://api.clubensc.com.br'
    description: Production server
components:
  requestBodies:
    Voucher.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Voucher.find'
      description: objeto body com options para a busca
      required: true
    Benefit.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Benefit.find'
      description: objeto body com options para a busca
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    Voucher.find:
      type: object
      properties:
        _id:
          type: string
          description: ID do voucher
        userId:
          type: string
          description: ID do usuário que possui os vouchers
        benefitId:
          type: string
          description: ID do beneficio que esse voucher entrega
        businessId:
          type: string
          description: ID do parceiro que oferece o beneficio
        branchId:
          type: string
          description: ID da unidade de uso do benefício
        qrcode:
          type: string
          description: Código do voucher
        shopValue:
          type: number
          format: float
          description: depreciada
        rate:
          type: integer
          description: Avaliação do usuário
        status:
          type: string
          description: >-
            Um de: 

            tovalidate: voucher criado, mas não usado, 

            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 

            used: voucher validado e avaliado pelo cliente
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Voucher.create:
      type: object
      properties:
        userId:
          type: string
          description: ID do usuário que possui os vouchers
        benefitId:
          type: string
          description: ID do beneficio que esse voucher entrega
        businessId:
          type: string
          description: ID do parceiro que oferece o beneficio
        branchId:
          type: string
          description: ID da unidade de uso do benefício
        qrcode:
          type: string
          description: Código do voucher
        shopValue:
          type: number
          format: float
          description: depreciada
        rate:
          type: integer
          description: Avaliação do usuário
        status:
          type: string
          description: >-
            Um de: 

            tovalidate: voucher criado, mas não usado, 

            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 

            used: voucher validado e avaliado pelo cliente
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Voucher.update:
      type: object
      properties:
        _id:
          type: string
        businessId:
          type: string
          description: ID do parceiro que oferece o beneficio
        qrcode:
          type: string
          description: Código do voucher
        shopValue:
          type: number
          format: float
          description: depreciada
        rate:
          type: integer
          description: Avaliação do usuário
        status:
          type: string
          description: >-
            Um de: 

            tovalidate: voucher criado, mas não usado, 

            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 

            used: voucher validado e avaliado pelo cliente
    Voucher.delete:
      type: object
      properties:
        _id:
          type: string
          required:
            - _id
    Voucher.response:
      type: object
      properties:
        userId:
          type: string
          description: ID do usuário que possui os vouchers
        benefitId:
          type: string
          description: ID do beneficio que esse voucher entrega
        businessId:
          type: string
          description: ID do parceiro que oferece o beneficio
        branchId:
          type: string
          description: ID da unidade de uso do benefício
        qrcode:
          type: string
          description: Código do voucher
        shopValue:
          type: number
          format: float
          description: depreciada
        rate:
          type: integer
          description: Avaliação do usuário
        status:
          type: string
          description: >-
            Um de: 

            tovalidate: voucher criado, mas não usado, 

            pending: voucher validado por um parceiro, mas ainda não avaliado
            pelo cliente, 

            used: voucher validado e avaliado pelo cliente
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Benefit.find:
      type: object
      properties:
        status:
          type: boolean
          description: "se o beneficio esta ativo ou não"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _id:
          type: string
          description: ID do beneficio a ser buscado
        businessId:
          type: string
        type:
          type: string
          description: "se o beneficio é perene ou se é um evento (evento acontece uma unica vez)"
        flagPromotion:
          type: boolean
          description: "não esta sendo usado (confirmar, mostrava uma badge de promoção)"
        flagSpotlight:
          type: boolean
          description: "se o beneficio está em destaque"
        flagHidden:
          type: boolean
          description: "se o beneficio está escondido"
        title:
          type: string
          description: "titulo do beneficio"
        slug:
          type: string
          description: "identificador do link no formato: beneficio-dado-informacao"
        description:
          type: string
          description: "Descrição do beneficio"
        resume:
          type: string
          description: "Descrição auxiliar do beneficio (ver se encontra no código)"
        videoUrl:
          type: string
          description: "ok"
        discountType:
          type: string
          description: "O tipo do desconto, se é em porcentagel ou se é pelo valor fixo ('percent' ou 'plain') "
        discount:
          type: string
          description: "O valor do desconto (levando em consideraçãoo tipo do desconto) "
        eventDescription:
          type: string
          description: "Informação sobre o evento (!app)"
        siteUrl:
          type: string
          description: "A URL externa com mais informações sobre o beneficio (!app)"
        tinySiteUrl:
          type: string
          description: "A URL (encurtada) externa com mais informações sobre o beneficio (!app)"
        footerNote:
          type: string
          description: "descrição extra do beneficio (!app)"
        shelfLifeStart:
          type: string
          description: "ok (!app)"
        shelfLifeEnd:
          type: string
          description: "ok (!app)"
        redemptionType:
          type: string
          description: "ok - ver benefitForm.config (!app)"
        voucherCode:
          type: string
          description: "o código de quando é um voucher do tipo promocode (!app)"
        preGeneratedCode:
          type: boolean
          description: "Se esse beneficio está usando a lista de vouchercode criada pelo parceiro (!app)"
        voucherAmount:
          type: integer
          description: "ok (!app)"
        limitVoucherByUser:
          type: boolean
          description: "ok (!app)"
        voucherUserLimit:
          type: boolean
          description: "ok (!app)"
        voucherShelfLife:
          type: integer
          description: "Validade em dias do voucher em dias (!app)"
        benefitImage:
          type: string
          description: "Deprecado"
        voucherPeriodLimit:
          type: string
          description: "Até qual data esse voucher/promoção está valendo (!app)"
        events:
          type: array
          description: "Array de datas (com horário) em que os eventos irão acontecer"
          items:
            type: string
            format: date-time
        branches:
          type: array
          description: "Lista de branches que estão associadas a esse voucher (!app)"
          items:
            type: object
            properties:
              branch:
                type: string
              type:
                type: string
              location:
                type: object
                properties:
                  type:
                    type: string
                  coordinates:
                    type: array
                    items:
                      type: number
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category.response'
    Benefit.branch:
      type: object
      properties:
        branch:
          type: string
        type:
          type: string
        location:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number
    Benefit.response:
      type: object
      required:
        - _id
        - businessId
        - type
        - flagPromotion
        - flagSpotlight
        - flagHidden
        - status
        - title
        - slug
        - description
        - resume
        - videoUrl
        - discountType
        - discount
        - shelfLifeStart
        - shelfLifeEnd
        - redemptionType
      properties:
        status:
          type: boolean
          description: O status do beneficio (?porque boleano?)
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _id:
          type: string
          description: ID do beneficio
        businessId:
          type: string
          description: ID do parceiro que oferece o beneficio
        type:
          type: string
          description: O tipo de benefício
        flagPromotion:
          type: boolean
          description: Se este benefício está marcado como em promoção
        flagSpotlight:
          type: boolean
          description: Se este benefício está marcado para aparecer em destaque
        flagHidden:
          type: boolean
          description: Se este benefício está invisível (ou seria deletado soft?)
        title:
          type: string
          description: O título do benefício
        slug:
          type: string
          description: 'O título do benefício que vira link: beneficio/o-que-fazer-na-cama '
        description:
          type: string
          description: A descrição do benefício
        resume:
          type: string
          description: RESUME?
        videoUrl:
          type: string
          description: A URL do video do benefício
        discountType:
          type: string
          description: O tipo de desconto do benefício
        discount:
          type: string
          description: O valor do desconto do benefício
        eventDescription:
          type: string
          description: 'eventDescription ??? '
        siteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício??? '
        tinySiteUrl:
          type: string
          description: A URL ???
        footerNote:
          type: string
          description: Nota de rodapé ???
        shelfLifeStart:
          type: string
          description: Data de início de vizualização/disponibilização do beneficio???
        shelfLifeEnd:
          type: string
          description: Data de fim de vizualização/disponibilização do beneficio???
        redemptionType:
          type: string
          description: O tipo de resgate do beneficio???
        voucherCode:
          type: string
          description: O código do voucher a ser gerado desse beneficio
        preGeneratedCode:
          type: string
          description: preGeneratedCode ???
        voucherAmount:
          type: string
          description: Quantos vouchers vão poder ser gerados para esse benefício
        limitVoucherByUser:
          type: string
          description: >-
            Identifica se existe limite de vouchers gerados por usuário para
            esse benefício
        voucherUserLimit:
          type: string
          description: >-
            Quantidade de vouchers que podem ser gerados por usuário para esse
            benefício
        voucherShelfLife:
          type: string
          description: >-
            Qual diferença entre essa propriedade e: shelfLifeStart,
            shelfLifeEnd
        benefitImage:
          type: string
          description: Imagem (seria URL?) desse beneficio
        voucherPeriodLimit:
          type: string
          description: voucherPeriodLimit ???
        events:
          type: string
          description: events ???
        branches:
          description: 'branches?? TODO: descriçao e modelagem do objeto deta propriedade'
          type: array
          items:
            type: object
        categories:
          description: As categorias deste benefício
          type: array
          items:
            type: string
    Category.find:
      type: object
      properties:
        status:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _id:
          type: string
        name:
          type: string
        showMenu:
          type: boolean
        showApp:
          type: boolean
        weight:
          type: integer
        weightByDate:
          type: boolean
        parentId:
          type: string
        iconAppUrl:
          type: string
        backgroundAppUrl:
          type: string
        iconWebsiteUrl:
          type: string
    Category.response:
      type: object
      required:
        - name
        - showMenu
        - showApp
        - status
        - weight
        - weightByDate
      properties:
        status:
          type: boolean
          description: O status dessa categoria (ativo ou não)
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _id:
          type: string
          description: ID da categoria
        name:
          type: string
          description: Nome da categoria
        showMenu:
          type: boolean
          description: Marca essa categoria para ser mostrada no menu (???)
        showApp:
          type: boolean
          description: '???'
        weight:
          type: integer
          description: O peso dessa categoria em relação (ordem que eles aparecem no site)
        weightByDate:
          type: boolean
          description: Ordenar os beneficios da categoria por data
        parentId:
          type: string
          description: ID da categoria acima (pai) desta cagegoria
        iconAppUrl:
          type: string
          description: A URL do ícone da categoria a ser mostrada no app
        backgroundAppUrl:
          type: string
          description: A URL da imagem de background da categoria quando ela está selecionada
        iconWebsiteUrl:
          type: string
          description: A URL do ícone da categoria a ser mostrada no site
    Redemption.find:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        _id:
          type: string
        userId:
          type: string
        benefitId:
          type: boolean
        branchId:
          type: boolean
        voucherId:
          type: integer
        discoutValue:
          type: boolean
    Redemption.response:
      type: object
      required:
        - userId
        - benefitId
        - branchId
        - voucherId
        - discoutValue
      properties:
        createdAt:
          type: string
          format: date-time
        _id:
          type: string
        userId:
          type: string
        benefitId:
          type: boolean
        branchId:
          type: boolean
        voucherId:
          type: integer
        discoutValue:
          type: boolean
    UserVIP.find:
      type: object
      properties:
        _id:
          type: string
        cpf:
          type: string
        name:
          type: string
        email:
          type: string
        status:
          type: string
        expiracy:
          type: string
        perfil:
          type: string
        createdAt_id:
          type: string
        updatedAt_id:
          type: string
    UserVIP.response:
      type: object
      required:
        - _id
        - cpf
        - name
        - email
      properties:
        _id:
          type: string
        cpf:
          type: string
        name:
          type: string
        email:
          type: string
        status:
          type: string
        expiracy:
          type: string
        perfil:
          type: string
        createdAt_id:
          type: string
        updatedAt_id:
          type: string
    Document.upload.avatar:
      type: object
      properties:
        file:
          type: object
          properties:
            fileName:
              type: string
            contentType:
              type: string
            data:
              type: string
              format: byte
    Document.upload.response:
      description: revisar a resposta
      type: object
      properties:
        result:
          type: object
          properties:
            code:
              type: string
            name:
              type: string
            result:
              type: object
              properties:
                image:
                  type: string
    Rating.create:
      type: object
      properties:
        cognitoId:
          type: string
        rate:
          type: string
        publishedDate:
          type: string
        version:
          type: string
        createdAt_id:
          type: string
        updatedAt_id:
          type: string
    Rating.response:
      type: object
      properties:
        cognitoId:
          type: string
        rate:
          type: string
        publishedDate:
          type: string
        version:
          type: string
        createdAt_id:
          type: string
        updatedAt_id:
          type: string
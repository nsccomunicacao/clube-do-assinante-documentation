swagger: "2.0"
info:
  description: "Documentação de API do Clube NSC [link](https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE) .`keyword` ."
  version: "1.0.0"
  title: "Clube NSC API Docs"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "kleyson.sousa@somosnsc.com.br"
  license:
    name: "licença de uso Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "voucher"
  description: "Vouchers do clube"
  externalDocs:
    description: "Documentação auxiliar(wip)"
    url: "https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE"
schemes:
- "https"
paths:

  /voucher/v1/find:
    post:
      tags:
      - "voucher"
      summary: "busca todos os vouchers."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findVouchers"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Voucher.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"
  /voucher/v1/find/by-status:
    post:
      tags:
      - "voucher"
      summary: "busca vouchers baseado no status (ActiveVouchers/UsedVouchers)"
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findVoucherByStatus"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Voucher.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"
  /voucher/v1/find/one:
    post:
      tags:
      - "voucher"
      summary: "busca um voucher."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findOneVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Voucher.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"
  /voucher/v1/delete:
    post:
      tags:
      - "voucher"
      summary: "deleta um voucher."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "removeVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com ID do voucher a ser removido"
        required: true
        schema:
          $ref: '#/definitions/Voucher.response'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.find'
        "400":
          description: "Invalid Voucher"
  /voucher/v1/generateVoucher:
    post:
      tags:
      - "voucher"
      summary: "cria um voucher."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "generateVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com dados para criar um novo voucher"
        required: true
        schema:
          $ref: '#/definitions/Voucher.create'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"
  /voucher/v1/update:
    post:
      tags:
      - "voucher"
      summary: "vota em um voucher."
      description: "Atualiza um voucher, por exemplo para votar(dar nota) em um voucher"
      operationId: "updateVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body dados para atualizar um voucher"
        required: true
        schema:
          $ref: '#/definitions/Voucher.update'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"

  /benefit/v1/find/by-type:
    post:
      tags:
      - "benefit"
      summary: "busca todos os vouchers."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findBenefitsByType"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Benefit.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Benefit.response'
        "400":
          description: "Invalid Voucher"
  /benefit/v1/find/by-near:
    post:
      tags:
      - "benefit"
      summary: "busca todos os vouchers."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findBenefitsByNear"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Benefit.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Benefit.response'
        "400":
          description: "Invalid Voucher"
  /benefit/v1/find/by-term:
    post:
      tags:
      - "benefit"
      summary: "busca vouchers por term."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findBenefitsByTerm"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Benefit.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Benefit.response'
        "400":
          description: "Invalid Voucher"
  /benefit/v1/find/by-id:
    post:
      tags:
      - "benefit"
      summary: "busca vouchers por ID"
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findBenefitsById"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Benefit.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Benefit.response'
        "400":
          description: "Invalid Voucher"

  /category/v1/find/getAll:
    post:
      tags:
      - "category"
      summary: "busca por todas as categorias dos beneficios"
      description: "descrição TODO: como usar esse endpoint"
      operationId: "getAllCategories"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Benefit.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Benefit.response'
        "400":
          description: "Invalid Voucher"
          
  /redemption/v1/getList:
    post:
      tags:
      - "redemption"
      summary: "Busca a lista de vouchers que foram resgatados? (redeem?)"
      description: "descrição TODO: como usar esse endpoint"
      operationId: "getRedemptionList"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a consulta"
        required: true
        schema:
          $ref: '#/definitions/Redemption.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Redemption.response'
        "400":
          description: "Invalid Voucher"

  /user-vip/v1/find/one:
    post:
      tags:
      - "user-vip"
      summary: "Busca por um usuário VIP"
      description: "descrição TODO: como usar esse endpoint"
      operationId: "userVipFindOne"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a consulta"
        required: true
        schema:
          $ref: '#/definitions/UserVIP.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/UserVIP.response'
        "400":
          description: "Invalid Voucher"

  /document/v1/upload/avatar:
    post:
      tags:
      - "document-upload-avatar"
      summary: "Envia uma imagem para o avatar do usuário"
      description: "descrição TODO: como usar esse endpoint"
      operationId: "documentUploadAvatar"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a consulta"
        required: true
        schema:
          $ref: '#/definitions/Document.upload.avatar'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Document.upload.response'
        "400":
          description: "Invalid request"

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Voucher.find:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "ID do voucher"
      userId:
        type: "string"
        description: "ID do usuário que possui os vouchers"
      benefitId:
        type: "string"
        description: "ID do beneficio que esse voucher entrega"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      branchId:
        type: "string"
        description: "ID da branch? (definir)"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  Voucher.create:
    type: "object"
    properties:
      userId:
        type: "string"
        description: "ID do usuário que possui os vouchers"
      benefitId:
        type: "string"
        description: "ID do beneficio que esse voucher entrega"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      branchId:
        type: "string"
        description: "ID da branch? (definir)"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  Voucher.update:
    type: "object"
    properties:
      _id: 
        type: "string"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
  Voucher.delete:
    type: "object"
    properties:
      _id: 
        type: "string"
        required: 
         - _id
  Voucher.response:
    type: "object"
    properties:
      userId:
        type: "string"
        description: "ID do usuário que possui os vouchers"
      benefitId:
        type: "string"
        description: "ID do beneficio que esse voucher entrega"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      branchId:
        type: "string"
        description: "ID da branch? (definir)"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
        
  Benefit.find:
    type: "object"
    properties:
      status: 
        type: "boolean"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _id:
        type: "string"
        description: "ID do beneficio a ser buscado"
      businessId:
        type: "string"
      type:
        type: "string"
      flagPromotion: 
        type: "boolean"
      flagSpotlight: 
        type: "boolean"
      flagHidden: 
        type: "boolean"
      title:
        type: "string"
      slug:
        type: "string"
      description:
        type: "string"
      resume:
        type: "string"
      videoUrl:
        type: "string"
      discountType:
        type: "string"
      discount:
        type: "string"
      eventDescription:
        type: "string"
      siteUrl:
        type: "string"
      tinySiteUrl:
        type: "string"
      footerNote:
        type: "string"
      shelfLifeStart:
        type: "string"
      shelfLifeEnd:
        type: "string"
      redemptionType:
        type: "string"
      voucherCode:
        type: "string"
      preGeneratedCode:
        type: "string"
      voucherAmount:
        type: "string"
      limitVoucherByUser:
        type: "string"
      voucherUserLimit:
        type: "string"
      voucherShelfLife:
        type: "string"
      benefitImage:
        type: "string"
      voucherPeriodLimit:
        type: "string"
      events:
        type: "array"
        items: 
          type: "string"
          format: "date-time"
      vouchers:
        type: "string"
      branches:
        type: "array"
        items: 
          type: "object"
          properties:
            branch:
              type: "string"
            type:
              type: "string"
            location:
              type: "object"
              properties:
                type:
                  type: "string"
                coordinates: 
                  type: "array"
                  items:
                    type: "number"
      categories:
        type: "array"
        items: 
          $ref: '#/definitions/Category.response'
  Benefit.branch:
    type: "object"
    properties:
      branch:
        type: "string"
      type:
        type: "string"
      location:
        type: "object"
        properties:
          type:
            type: "string"
          coordinates: 
            type: "array"
            items:
              type: "number"
  Benefit.response:
    type: "object"
    required: 
    - _id
    - businessId
    - type
    - flagPromotion
    - flagSpotlight
    - flagHidden
    - status
    - title
    - slug
    - description
    - resume
    - videoUrl
    - discountType
    - discount
    - shelfLifeStart
    - shelfLifeEnd
    - redemptionType
    properties:
      status: 
        type: "boolean"
        description: "O status do beneficio (?porque boleano?)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _id:
        type: "string"
        description: "ID do beneficio"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      type:
        type: "string"
        description: "O tipo de benefício"
      flagPromotion: 
        type: "boolean"
        description: "Se este benefício está marcado como em promoção"
      flagSpotlight: 
        type: "boolean"
        description: "Se este benefício está marcado para aparecer em destaque"
      flagHidden: 
        type: "boolean"
        description: "Se este benefício está invisível (ou seria deletado soft?)"
      title:
        type: "string"
        description: "O título do benefício"
      slug:
        type: "string"
        description: "O título do benefício que vira link: beneficio/o-que-fazer-na-cama "
      description:
        type: "string"
        description: "A descrição do benefício"
      resume:
        type: "string"
        description: "RESUME?"
      videoUrl:
        type: "string"
        description: "A URL do video do benefício"
      discountType:
        type: "string"
        description: "O tipo de desconto do benefício"
      discount:
        type: "string"
        description: "O valor do desconto do benefício"
      eventDescription:
        type: "string"
        description: "eventDescription ??? "
      siteUrl:
        type: "string"
        description: "A URL do parceiro reference ao benefício??? "
      tinySiteUrl:
        type: "string"
        description: "A URL ???"
      footerNote:
        type: "string"
        description: "Nota de rodapé ???"
      shelfLifeStart:
        type: "string"
        description: "Data de início de vizualização/disponibilização do beneficio???"
      shelfLifeEnd:
        type: "string"
        description: "Data de fim de vizualização/disponibilização do beneficio???"
      redemptionType:
        type: "string"
        description: "O tipo de resgate do beneficio???"
      voucherCode:
        type: "string"
        description: "O código do voucher a ser gerado desse beneficio"
      preGeneratedCode:
        type: "string"
        description: "preGeneratedCode ???"
      voucherAmount:
        type: "string"
        description: "Quantos vouchers vão poder ser gerados para esse benefício"
      limitVoucherByUser:
        type: "string"
        description: "Identifica se existe limite de vouchers gerados por usuário para esse benefício"
      voucherUserLimit:
        type: "string"
        description: "Quantidade de vouchers que podem ser gerados por usuário para esse benefício"
      voucherShelfLife:
        type: "string"
        description: "Qual diferença entre essa propriedade e: shelfLifeStart, shelfLifeEnd"
      benefitImage:
        type: "string"
        description: "Imagem (seria URL?) desse beneficio"
      voucherPeriodLimit:
        type: "string"
        description: "voucherPeriodLimit ???"
      events:
        type: "string"
        description: "events ???"
      vouchers:
        type: "string"
        description: "Lista de vouchers que foram gerados para este benefício"
      branches:
        description: "branches?? TODO: descriçao e modelagem do objeto deta propriedade"
        type: "array"
        items: {
          type: "object"
        }
      categories:
        description: "As categorias deste benefício"
        type: "array"
        items: {
          type: "string"
        }
        
  Category.find:
    type: "object"
    properties:
      status: 
        type: "boolean"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _id:
        type: "string"
      name:
        type: "string"
      showMenu:
        type: "boolean"
      showApp:
        type: "boolean"
      weight:
        type: "integer"
      weightByDate:
        type: "boolean"
      parentId:
        type: "string"
      iconAppUrl:
        type: "string"
      backgroundAppUrl:
        type: "string"
      iconWebsiteUrl:
        type: "string"
  Category.response:
    type: "object"
    required: 
    - name
    - showMenu
    - showApp
    - status
    - weight
    - weightByDate
    properties:
      status: 
        type: "boolean"
        description: "O status dessa categoria (???)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _id:
        type: "string"
        description: "ID da categoria"
      name:
        type: "string"
        description: "Nome da categoria"
      showMenu:
        type: "boolean"
        description: "Marca essa categoria para ser mostrada no menu (???)"
      showApp:
        type: "boolean"
        description: "???"
      weight:
        type: "integer"
        description: "O peso dessa categoria em relação...(???)"
      weightByDate:
        type: "boolean"
        description: "Peso por data???"
      parentId:
        type: "string"
        description: "ID da categoria acima (???)"
      iconAppUrl:
        type: "string"
        description: "A URL do ícone da categoria a ser mostrada no app(???)"
      backgroundAppUrl:
        type: "string"
        description: "A URL do background (???)"
      iconWebsiteUrl:
        type: "string"
        description: "A URL do ícone da categoria a ser mostrada no site (???)"
  
  
  Redemption.find:
    type: "object"
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      _id:
        type: "string"
      userId:
        type: "string"
      benefitId:
        type: "boolean"
      branchId:
        type: "boolean"
      voucherId:
        type: "integer"
      discoutValue:
        type: "boolean"
  Redemption.response:
    type: "object"
    required: 
    - userId
    - benefitId
    - branchId
    - voucherId
    - discoutValue
    properties:
      createdAt:
        type: "string"
        format: "date-time"
      _id:
        type: "string"
      userId:
        type: "string"
      benefitId:
        type: "boolean"
      branchId:
        type: "boolean"
      voucherId:
        type: "integer"
      discoutValue:
        type: "boolean"
      
  UserVIP.find:
    type: "object"
    properties:
      _id: 
        type: "string"
      cpf: 
        type: "string"
      name: 
        type: "string"
      email: 
        type: "string"
      status: 
        type: "string"
      expiracy: 
        type: "string"
      perfil: 
        type: "string"
      createdAt_id: 
        type: "string"
      updatedAt_id: 
        type: "string"
        
  UserVIP.response:
    type: "object"
    required: 
         - _id
         - cpf
         - name
         - email
    properties:
      _id: 
        type: "string"
      cpf: 
        type: "string"
      name: 
        type: "string"
      email: 
        type: "string"
      status: 
        type: "string"
      expiracy: 
        type: "string"
      perfil: 
        type: "string"
      createdAt_id: 
        type: "string"
      updatedAt_id: 
        type: "string"
        
  
  Document.upload.avatar:
    type: "object"
    properties:
      file:
        type: "object"
        properties:
          fileName:
            type: "string"
          contentType: 
            type: "string"
          data: 
            type: "string"
            format: "byte"
      
  Document.upload.response:
    description: "revisar a resposta"
    type: "object"
    properties:
      file:
        type: "object"
        properties:
          fileName:
            type: "string"
          contentType: 
            type: "string"
          data: 
            type: "string"
            format: "byte"
   
externalDocs:
  description: "Documentação auxiliar (Google docs)"
  url: "https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE"
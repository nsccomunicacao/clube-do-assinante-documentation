swagger: "2.0"
info:
  description: "Documentação de API do Clube NSC [link](https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE) .`keyword` ."
  version: "1.0.0"
  title: "Clube NSC API Docs"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "kleyson.sousa@somosnsc.com.br"
  license:
    name: "licença de uso Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "voucher"
  description: "Vouchers do clube"
  externalDocs:
    description: "Documentação auxiliar(wip)"
    url: "https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE"
schemes:
- "https"
paths:

  /voucher/v1/find:
    post:
      tags:
      - "voucher"
      summary: "busca todos os vouchers."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findVouchers"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Voucher.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"

  /voucher/v1/findByStatus:
    post:
      tags:
      - "voucher"
      summary: "busca vouchers baseado no status (ActiveVouchers/UsedVouchers)"
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findVoucherByStatus"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Voucher.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"
          
  /voucher/v1/findOne:
    post:
      tags:
      - "voucher"
      summary: "busca um voucher."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "findOneVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com options para a busca"
        required: true
        schema:
          $ref: '#/definitions/Voucher.find'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"
          
  /voucher/v1/remove:
    post:
      tags:
      - "voucher"
      summary: "remove um voucher."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "removeVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com ID do voucher a ser removido"
        required: true
        schema:
          $ref: '#/definitions/Voucher.response'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.find'
        "400":
          description: "Invalid Voucher"

  /voucher/v1/generateVoucher:
    post:
      tags:
      - "voucher"
      summary: "cria um voucher."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "generateVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body com dados para criar um novo voucher"
        required: true
        schema:
          $ref: '#/definitions/Voucher.create'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"

  /voucher/v1/voteOnVoucher:
    post:
      tags:
      - "voucher"
      summary: "vota em um voucher."
      description: "descrição TODO: como usar esse endpoint"
      operationId: "voteOnVoucher"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "objeto body dados para votar no voucher (TODO: confirmar isso)"
        required: true
        schema:
          $ref: '#/definitions/Voucher.update'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: '#/definitions/Voucher.response'
        "400":
          description: "Invalid Voucher"

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Voucher.find:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "ID do voucher"
      userId:
        type: "string"
        description: "ID do usuário que possui os vouchers"
      benefitId:
        type: "string"
        description: "ID do beneficio que esse voucher entrega"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      branchId:
        type: "string"
        description: "ID da branch? (definir)"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  Voucher.create:
    type: "object"
    properties:
      userId:
        type: "string"
        description: "ID do usuário que possui os vouchers"
      benefitId:
        type: "string"
        description: "ID do beneficio que esse voucher entrega"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      branchId:
        type: "string"
        description: "ID da branch? (definir)"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  Voucher.update:
    type: "object"
    properties:
      _id: 
        type: "string"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
  Voucher.delete:
    type: "object"
    properties:
      _id: 
        type: "string"
        required: 
         - _id
  
  Voucher.response:
    type: "object"
    properties:
      userId:
        type: "string"
        description: "ID do usuário que possui os vouchers"
      benefitId:
        type: "string"
        description: "ID do beneficio que esse voucher entrega"
      businessId:
        type: "string"
        description: "ID do parceiro que oferece o beneficio"
      branchId:
        type: "string"
        description: "ID da branch? (definir)"
      qrcode:
        type: "string"
        description: "QR code do voucher? (tem descrição melhor?)"
      shopValue:
        type: "number"
        format: "float"
        description: "perguntar"
      rate:
        type: "integer"
        description: "perguntar -> gte: 1,lte: 5,"
      status:
        type: "string"
        description: "Status do voucher (perguntar se é enum etc) (requred?)"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
        

externalDocs:
  description: "Documentação auxiliar (Google docs)"
  url: "https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE"
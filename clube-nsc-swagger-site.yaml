openapi: 3.0.0
info:
  description: >-
    Documentação de API do Clube NSC
    [link](https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE)
    .`keyword` .
  version: 1.0.0-oas3
  title: (Site) Clube NSC API Docs
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: kleyson.sousa@somosnsc.com.br
  license:
    name: licença de uso Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: content
    description: Conteúdo de texto de alguns elementos do site
  - name: category
    description: Categoria dos benefícios
    
paths:
  
  /content/v1/find:
    post:
      tags:
        - content
      summary: ''
      description: 'Busca o conteudo de texto de algumas partes do site como, texto de rodapé, texto de botões etc'
      operationId: findContent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Content.find'
        
  /category/v1/find/getAll:
    post:
      tags:
        - category
      description: 'Busca as categorias de beneficios'
      operationId: getAllCategories
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Category.getAll'

  /banner/v1/find/getlist:
    post:
      tags:
        - banner
      description: 'Busca os banners da home do site'
      operationId: getBannersList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Banner.find'

  /business/v1/create/without-token:
    post:
      tags:
        - business
      description: 'Cria um novo business (parceiro) a partir do formulario na página "seja um parceiro"'
      operationId: createBusinessWithoutToken
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business.createResponse'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Business.createWithoutToken'

  /benefit/v1/find/geteventlist:
    post:
      tags:
        - benefit
      description: 'Busca por benefits '
      operationId: getBenefitsEventList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Benefit.geteventlist'
  /benefit/v1/find/getlist:
    post:
      tags:
        - benefit
      description: 'Busca por benefits '
      operationId: getBenefitsList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Benefit.getlist'
  /benefit/v1/find/by-id:
    post:
      tags:
        - benefit
      description: 'Busca um benefício específico baseado em seu identificador (slug)<br/>
                    Esse endpoint é usado quando se clica em um benefit no site para pegar todos seus detalhes'
      operationId: findBenefitsById
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.find-by-id.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find-by-id'
  /benefit/v1/find/by-term-with-branches:
    post:
      tags:
        - benefit
      description: 'Busca por benefits associados com uma palavra chave<br/>
                    Esse endpoint é usado para buscar por benefícios no site usando a barra de pesquisa'
      operationId: findBenefitsByTermWithBranches
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefit.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Benefit.find-by-term-with-branches'
  
  /faq/v1/find:
    post:
      tags:
        - faq
      description: 'Busca as perguntas/respostas do FAQ do site'
      operationId: findFaq
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faq.response'
        '400':
          description: Invalid input/id/etc (todo)
      requestBody:
        $ref: '#/components/requestBodies/Faq.find'
  
  /sender/v1/email:
    post:
      tags:
        - email
        - sender
      operationId: emailSender
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email.response'
        '400':
          description: Bad request
      requestBody:
        $ref: '#/components/requestBodies/Email.send'
  
externalDocs:
  description: Documentação auxiliar (Google docs)
  url: >-
    https://docs.google.com/document/d/1lLOp2-4-ktxmyN8QbNH1g7swISmTdg7-mFgy05_pXiE
servers:
  - url: 'https://stg-api.clubensc.com.br'
    description: Staging server
  - url: 'https://api.clubensc.com.br'
    description: Production server
components:
  requestBodies:
    Content.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Content.find'
      description: 'Objeto body para filtrar e/ou ordenar a busca do conteúdo do site<br/>**objeto {} no body do request é obrigatório**'
      required: true
    
    Banner.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Banner.find'
    
    Business.createWithoutToken:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Business.createWihtoutToken'
    
    Benefit.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Benefit.find'
      description: objeto body com options para a busca
      required: true
    Benefit.find-by-id:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Benefit.find-by-id'
      description: 'Objeto body para filtrar a busca do benefit **objeto {"filters":{"slug":"_NOME_"}} no body do request é obrigatório**'
      required: true
    Benefit.geteventlist:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Benefit.geteventlist'
      description: 'Objeto body para ordenar e paginar a busca dos benefits'
      required: true
    Benefit.getlist:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Benefit.getlist'
      description: 'Objeto body para ordenar e paginar a busca dos benefits'
      required: true
    Benefit.find-by-term-with-branches:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Benefit.find-by-term-with-branches'
      description: 'Objeto body para buscar por benefits **objeto {"filters":{"term":"_BUSCA_", "partial":true}} no body do request é obrigatório**'
      required: true
    
    Category.getAll:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category.getAll'
      description: 'Objeto body para filtrar e/ou ordenar a busca das categorias do site<br/>**objeto {} no body do request é obrigatório**'
      required: true
    
    Email.send:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Email.send'
    
    Faq.find:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Faq.find'
      description: 'Objeto body para filtrar e/ou ordenar a busca das perguntas e respostas (faq) do site<br/>**objeto {} no body do request é obrigatório**'
      required: true
    
  securitySchemes:
    site_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://api.clubensc.com.br'
          scopes:
            'write:schema_name': todo
            'read:schema_name': todo
    api_key:
      type: apiKey
      name: api_key
      in: header
    
  schemas:
    Content.find:
      required:
        - options
      type: object
      properties:
        options:
          type: object
          properties:
            sort:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
    Content.response:
      type: object
      properties:
        _id:
          type: string
          description: 'ID desse objeto'
        body:
          type: string
          description: 'O conteúdo de fato que será mostrado para o usuário (exemplo texto de um botão ou nota de rodaé)'
        component:
          type: string
          description: 'O nome da seção do site que tem o componente que carrega o conteúdo (exemplo footer, about)'
        identifier:
          type: string
          description: 'Identificador do componente que irá carregar esse conteúdo (exemplo firstCardTitle, firstCardParagraph1)'
        name:
          type: string
          description: 'Descrição user-friendly do componente + seção associada a esse conteúdo (exemplo Primerio card parágrafo 1)'
        updatedAt:
          type: string
          description: 'Data e hora da ultima atualização dos dados'
    
    Category.getAll:
      required:
        - filter
      type: object
      properties:
        filters:
          type: object
          properties:  
            showMenu:
              type: boolean
            status:
              type: boolean
    Category.response:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          description: 'Nome da categoria (exemplo: Entretenimento)'
        status:
          type: boolean
          description: 'Categoria ativa ou não'
        showApp:
          type: boolean
          description: 'Se a categoria aparece no menu do app'
        showMenu:
          type: boolean
          description: 'Se a categoria aparece no menu do website'
        weight:
          type: integer
          description: 'Ordem que as categorias são organizadas, menor aparece antes'
        weightByDate:
          type: boolean
          description: 'Depreciada'
        parentId:
          type: string
          description: 'ID da categoria pai, se existir'
        backgroundAppUrl:
          type: string
          description: 'Identificador da imagem (nome do arquivo) do fundo da tela de seleção de categoria usado no app'
        iconAppUrl:
          type: string
          description: 'Identificador da imagem (nome do arquivo) do ícone usado no app'
        iconWebsiteUrl:
          type: string
          description: 'Identificador da imagem (nome do arquivo) do ícone usado no website'
    
    Business.createWihtoutToken:
      required:
        - filter
      type: object
      properties:
        alias:
          type: string
          description: 'Nome fantasia do business (parceiro)'
        name:
          type: string
          description: 'Razão social do business (parceiro)'
        cnpj:
          type: string
          description: 'Número CNPJ em string sem pontuações'
        zipcode:
          type: string
          description: 'CEP em string sem pontuações'
        address:
          type: string
          description: 'Endereço (rua, avenida etc)'
        district:
          type: string
          description: 'Bairro'
        number:
          type: integer
          description: 'Numero do endereço'
        complement:
          type: string
          description: 'Complemento do endereço'
        state:
          type: integer
          description: 'Representação numérica do UF do estado (https://www.ibge.gov.br/explica/codigos-dos-municipios.php)'
        city:
          type: string
          description: 'Representação numérica da cidade (https://www.ibge.gov.br/explica/codigos-dos-municipios.php)'
        phone:
          type: integer
          description: 'Número do telefone sem pontuação (ex: 4833224455)'
        contact:
          type: integer
          description: 'Nome do responsável'
        email:
          type: string
          description: 'Email para contato'
        site:
          type: string
          description: 'Site do business (parceiro)'
        status:
          type: boolean
          description: 'Indicador se o parceiro está ativo ou não. Formulário do site envia falso'
    Business.createResponse:
      properties:
        code:
          type: string
          example: 'BS21'
        name:
          type: string
          example: 'BusinessCreateResult'
        result:
          type: object
    
    Banner.find:
      type: object
      properties:
        options:
          type: object
          properties:
            skip:
              type: integer
            limit:
              type: integer
              example: 3
            orderBy:
              type: object
              properties:
                weight:
                  type: integer
                  example: 1
    Banner.response:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
          description: 'String representando o tipo de banner (exemplo: NO_BENEFIT) REVIEW'
        weight:
          type: integer
          description: 'Ordem que os banners são mostrados, 1: maior da esquerda, 2: topo na direita, 3: embaixo na direita'
        benefitId:
          type: string
          description: 'O id do beneficio atrelado a esse banner (deprecado pq eles viraram categorias?) REVIEW'
        title:
          type: string
          description: 'O titulo que aparece dentro do banner'
        description:
          type: integer
          description: 'Subtitulo do banner, só é mostrado no maior banner, que fica no lado esquerdo na home'
        redirectUrl:
          type: string
          description: 'A URL que será carregada ao clicar no banner'
        imageUrl:
          type: string
          description: 'O nome da imagem que será carregada por esse banner (exemplo: f9c1464f0faf9314c0ac16bce1d9d2d0-full.jpg)'
        createdBy:
          type: string
          description: 'O ID de quem criou esse banner? REVIEW'
        updatedAt:
          type: string
          description: 'A data em que esse banner foi atualizado pela última vez'
        benefit:
          type: string
          description: 'Array com a list de benefícios atrelados a esse banner (deprecado igual o benefitID?)'
    
    Benefit.find:
      type: object
      required:
        - _id
        - businessId
        - type
        - flagPromotion
        - flagSpotlight
        - flagHidden
        - status
        - title
        - slug
        - description
        - resume
        - videoUrl
        - discountType
        - discount
        - shelfLifeStart
        - shelfLifeEnd
        - redemptionType
      properties:
        status:
          type: boolean
          description: 'Status do benefício (ativo ou não)'
        createdAt:
          type: string
          description: 'Data de criação do registro'
        updatedAt:
          type: string
          description: 'Última data de modificação do registro'
        _id:
          type: string
          description: 'ID do beneficio'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        type:
          type: string
          description: 'O tipo de benefício: event ou perennial'
        flagPromotion:
          type: boolean
          description: 'Sem função no sistema atual'
        flagSpotlight:
          type: boolean
          description: 'Se este benefício está marcado para aparecer na listagem de destaque'
        flagHidden:
          type: boolean
          description: 'Se este benefício está visível'
        title:
          type: string
          description: 'O título do benefício'
        slug:
          type: string
          description: 'O título do benefício que vira link: beneficio/o-que-fazer-na-cama '
        description:
          type: string
          description: 'A descrição do benefício'
        resume:
          type: string
          description: 'Resumo do benefício'
        videoUrl:
          type: string
          description: 'Não está sendo usada. A URL do video do benefício'
        discountType:
          type: string
          description: 'O tipo de desconto do benefício: percent ou plain'
        discount:
          type: string
          description: 'O valor do desconto do benefício'
        eventDescription:
          type: string
          description: 'Descrição do evento'
        siteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        tinySiteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        footerNote:
          type: string
          description: 'Nota de rodapé'
        shelfLifeStart:
          type: string
          description: 'Data de início da disponibilidade do benefício' 
        shelfLifeEnd:
          type: string
          description: 'Data do fim da disponibilidade do benefício' 
        redemptionType:
          type: string
          description: 'Tipo do código gerado na criação do voucher: promocode, limitedvocuher ou limitlessvoucher'
        voucherCode:
          type: string
          description: 'Código usado na geração do voucher quando redemptionType é promocode'
        preGeneratedCode:
          type: string
          description: 'Flag que define se os códigos do benefício são pré-gerados (a partir de um arquivo .csv)'
        voucherAmount:
          type: string
          description: 'Quantos vouchers vão poder ser gerados para esse benefício'
        limitVoucherByUser:
          type: string
          description: '>-
            Identifica se existe limite de vouchers gerados por usuário para
            esse benefício'
        voucherUserLimit:
          type: string
          description: >-
            Quantidade de vouchers que podem ser gerados por usuário para esse
            benefício
        voucherShelfLife:
          type: string
          description: >-
            Quantidade de dias até que o voucher expire
        benefitImage:
          type: string
          description: 'Identificador da imagem desse beneficio'
        voucherPeriodLimit:
          type: string
          description: 'Quantidades de dias necessárias para resetar o limite de vouchers por usuário (ex: um voucher a cada 10 dias)'
        events:
          type: string
          description: 'Data dos eventos'
        branches:
          description: 'Unidades relacionadas à esse benefício'
          type: array
          items:
            type: object
        categories:
          description: 'Categorias em que esse benefício pertence'
          type: array
          items:
            type: string
    Benefit.find-by-term-with-branches:
      type: object
      properties:
        filters:
          type: object
          properties:
            term:
              type: string
              example: "pet"
            partial:
              type: boolean
              example: true
        options:
          type: object
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 16
    Benefit.geteventlist:
      type: object
      properties:
        filters:
          type: object
        options:
          type: object
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 7
            orderby:
              type: object
              properties:
                events.0:
                  type: integer
                  example: 1
    Benefit.getlist:
      type: object
      properties:
        filters:
          type: object
          properties:
            flagSpotlight:
              type: boolean
              example: true
        options:
          type: object
          properties:
            skip:
              type: integer
              example: 0
            limit:
              type: integer
              example: 16
            orderby:
              type: object
              properties:
                updatedAt:
                  type: integer
                  example: -1
    Benefit.find-by-id:
      type: object
      properties:
        filters:
          type: object
          properties:
            slug:
              type: string
              example: "cinemulti"
        options:
          type: object
    
    
    Benefit.find-by-id.response:
      type: object
      properties:
        status:
          type: boolean
          description: 'Status do benefício (ativo ou não)'
        createdAt:
          type: string
          description: 'Data de criação do registro'
        updatedAt:
          type: string
          description: 'Última data de modificação do registro'
        _id:
          type: string
          description: 'ID do beneficio'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        type:
          type: string
          description: 'O tipo de benefício: event ou perennial'
        flagPromotion:
          type: boolean
          description: 'Sem função no sistema atual'
        flagSpotlight:
          type: boolean
          description: 'Se este benefício está marcado para aparecer na listagem de destaque'
        flagHidden:
          type: boolean
          description: 'Se este benefício está visível'
        title:
          type: string
          description: 'O título do benefício'
        slug:
          type: string
          description: 'O título do benefício que vira link: beneficio/o-que-fazer-na-cama '
        description:
          type: string
          description: 'A descrição do benefício'
        resume:
          type: string
          description: 'Resumo do benefício'
        videoUrl:
          type: string
          description: 'Não está sendo usada. A URL do video do benefício'
        discountType:
          type: string
          description: 'O tipo de desconto do benefício: percent ou plain'
        discount:
          type: string
          description: 'O valor do desconto do benefício'
        eventDescription:
          type: string
          description: 'Descrição do evento'
        siteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        tinySiteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        footerNote:
          type: string
          description: 'Nota de rodapé'
        shelfLifeStart:
          type: string
          description: 'Data de início da disponibilidade do benefício' 
        shelfLifeEnd:
          type: string
          description: 'Data do fim da disponibilidade do benefício' 
        redemptionType:
          type: string
          description: 'Tipo do código gerado na criação do voucher: promocode, limitedvocuher ou limitlessvoucher'
        voucherCode:
          type: string
          description: 'Código usado na geração do voucher quando redemptionType é promocode'
        preGeneratedCode:
          type: string
          description: 'Flag que define se os códigos do benefício são pré-gerados (a partir de um arquivo .csv)'
        voucherAmount:
          type: string
          description: 'Quantos vouchers vão poder ser gerados para esse benefício'
        limitVoucherByUser:
          type: string
          description: '>-
            Identifica se existe limite de vouchers gerados por usuário para
            esse benefício'
        voucherUserLimit:
          type: string
          description: >-
            Quantidade de vouchers que podem ser gerados por usuário para esse
            benefício
        voucherShelfLife:
          type: string
          description: >-
            Quantidade de dias até que o voucher expire
        benefitImage:
          type: string
          description: 'Identificador da imagem desse beneficio'
        
        
        bannerUrl:
          type: string
          description: 'Url do banner desse benefício'
        howToUseVoucher:
          type: string
          description: 'Explicação para o usuário do site para como usar esse benefício'
        usepoints:
          type: array
          description: '???'
          items:
            type: object
        salespoints:
          type: array
          description: 'pontos de venda?'
          items:
            type: object
        usepointList:
          type: array
          description: '????'
          items:
            type: object
        categoryList:
          type: array
          description: '?????'
          items:
            type: object
        salespointList:
          type: array
          description: '?????'
          items:
            type: object
        business:
          type: array
          description: '?????'
          items:
            type: object
          
          
        voucherPeriodLimit:
          type: string
          description: 'Quantidades de dias necessárias para resetar o limite de vouchers por usuário (ex: um voucher a cada 10 dias)'
        events:
          type: string
          description: 'Data dos eventos'
        branches:
          description: 'Unidades relacionadas à esse benefício'
          type: array
          items:
            type: object
        categories:
          description: 'Categorias em que esse benefício pertence'
          type: array
          items:
            type: string
    Benefit.response:
      type: object
      properties:
        status:
          type: boolean
          description: 'Status do benefício (ativo ou não)'
        createdAt:
          type: string
          description: 'Data de criação do registro'
        updatedAt:
          type: string
          description: 'Última data de modificação do registro'
        _id:
          type: string
          description: 'ID do beneficio'
        businessId:
          type: string
          description: 'ID do parceiro que oferece o beneficio'
        type:
          type: string
          description: 'O tipo de benefício: event ou perennial'
        flagPromotion:
          type: boolean
          description: 'Sem função no sistema atual'
        flagSpotlight:
          type: boolean
          description: 'Se este benefício está marcado para aparecer na listagem de destaque'
        flagHidden:
          type: boolean
          description: 'Se este benefício está visível'
        title:
          type: string
          description: 'O título do benefício'
        slug:
          type: string
          description: 'O título do benefício que vira link: beneficio/o-que-fazer-na-cama '
        description:
          type: string
          description: 'A descrição do benefício'
        resume:
          type: string
          description: 'Resumo do benefício'
        videoUrl:
          type: string
          description: 'Não está sendo usada. A URL do video do benefício'
        discountType:
          type: string
          description: 'O tipo de desconto do benefício: percent ou plain'
        discount:
          type: string
          description: 'O valor do desconto do benefício'
        eventDescription:
          type: string
          description: 'Descrição do evento'
        siteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        tinySiteUrl:
          type: string
          description: 'A URL do parceiro reference ao benefício'
        footerNote:
          type: string
          description: 'Nota de rodapé'
        shelfLifeStart:
          type: string
          description: 'Data de início da disponibilidade do benefício' 
        shelfLifeEnd:
          type: string
          description: 'Data do fim da disponibilidade do benefício' 
        redemptionType:
          type: string
          description: 'Tipo do código gerado na criação do voucher: promocode, limitedvocuher ou limitlessvoucher'
        voucherCode:
          type: string
          description: 'Código usado na geração do voucher quando redemptionType é promocode'
        preGeneratedCode:
          type: string
          description: 'Flag que define se os códigos do benefício são pré-gerados (a partir de um arquivo .csv)'
        voucherAmount:
          type: string
          description: 'Quantos vouchers vão poder ser gerados para esse benefício'
        limitVoucherByUser:
          type: string
          description: '>-
            Identifica se existe limite de vouchers gerados por usuário para
            esse benefício'
        voucherUserLimit:
          type: string
          description: >-
            Quantidade de vouchers que podem ser gerados por usuário para esse
            benefício
        voucherShelfLife:
          type: string
          description: >-
            Quantidade de dias até que o voucher expire
        benefitImage:
          type: string
          description: 'Identificador da imagem desse beneficio'
        
        
        bannerUrl:
          type: string
          description: 'Url do banner desse benefício'
        howToUseVoucher:
          type: string
          description: 'Explicação para o usuário do site para como usar esse benefício'
        usepoints:
          type: array
          description: '???'
          items:
            type: object
        salespoints:
          type: array
          description: 'pontos de venda?'
          items:
            type: object
        usepointList:
          type: array
          description: '????'
          items:
            type: object
        categoryList:
          type: array
          description: '?????'
          items:
            type: object
        salespointList:
          type: array
          description: '?????'
          items:
            type: object
        business:
          type: array
          description: '?????'
          items:
            type: object
          
          
        voucherPeriodLimit:
          type: string
          description: 'Quantidades de dias necessárias para resetar o limite de vouchers por usuário (ex: um voucher a cada 10 dias)'
        events:
          type: string
          description: 'Data dos eventos'
        branches:
          description: 'Unidades relacionadas à esse benefício'
          type: array
          items:
            type: object
        categories:
          description: 'Categorias em que esse benefício pertence'
          type: array
          items:
            type: string
    
    Email.send:
      required:
        - substitutionData
      type: object
      properties:
        to:
          type: string
        from:
          type: string
        subject:
          type: string
        templateId:
          type: string
        substitutionData:
          $ref: '#/components/schemas/Email.substitutionData'
    Email.substitutionData:
      required:
        - name
        - title
        - cpf
        - email
        - phone
        - subject
        - news
        - message
        - domainHtml
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        cpf:
          type: string
        email:
          type: string
        phone:
          type: string
        subject:
          type: string
        news:
          type: string
        message:
          type: string
        domainHtml:
          type: string
    Email.response:
      properties:
        code:
          type: string
          example: 'SE21'
        name:
          type: string
          example: 'EmailSendResult'
    
    Faq.find:
      type: object
      properties:
        filters:
          type: object
          properties:
            status:
              type: boolean
        options:
          type: object
          properties:
            sort:
              type: object
              properties:
                weight:
                  type: integer
                  example: 1
    Faq.response:
      type: object
      properties:
        _id:
          type: string
          description: 'ID do objeto'
        title:
          type: string
          description: 'A pergunta do FAQ'
        description:
          type: string
          description: 'A resposta para a pergunta'
        weight:
          type: integer
          description: 'Valor numerico para ordenação de cada pergunta/resposta'
        status:
          type: boolean
          description: 'Se esta pergunta/resposta está ativa ou não'